#!/usr/bin/env python
# -*- coding: UTF8 -*-

# Python module testccd.py
# Autogenerated from testccd.glade
# Generated on Thu Sep  8 09:05:55 2005

# Warning: Do not delete or modify comments related to context
# They are required to keep user's code

import os
import gtk
from SimpleGladeApp import SimpleGladeApp

glade_dir = ""

# Put your modules and data here
import gtk
from SimpleGladeApp import SimpleGladeApp
from gtkindiclient import *
# From here through main() codegen inserts/updates a class for
# every top-level widget in the .glade file.

class Testccd(SimpleGladeApp):
	def __init__(self, path="testccd.glade", root="testccd", domain=None, **kwargs):
		path = os.path.join(glade_dir, path)
		SimpleGladeApp.__init__(self, path, root, domain, **kwargs)

	def new(self):
		#context Testccd.new {
		indi.add_spinbutton(dev,"CCDPREVIEW_CTRL","WIDTH",self.width).set_bidirectional()
		indi.add_spinbutton(dev,"CCDPREVIEW_CTRL","HEIGHT",self.height).set_bidirectional()
		indi.add_spinbutton(dev,"CCDPREVIEW_CTRL","MAXGOODDATA",self.mgd).set_bidirectional()
		indi.add_spinbutton(dev,"CCDPREVIEW_CTRL","BYTEORDER",self.bo).set_bidirectional()
		indi.add_spinbutton(dev,"CCDPREVIEW_CTRL","BYTESPERPIXEL",self.bpp).set_bidirectional()
		indi.add_label(dev,"CCD_INFO","CCD_FWHM_PIXEL",self.fwhm)
		indi.add_label(dev,"CCD_INFO","CCD_PIXEL_SIZE",self.pixsize)
		indi.add_spinbutton(dev,"Telescope","Focus",self.focus).set_bidirectional()
		list=[self.startbutton,self.stopbutton]
		indi.add_togglebuttons(dev,"readout",list).set_bidirectional()	
		indi.add_comboboxentry(dev,"readout",self.combo).set_bidirectional()	
		indi.add_ccdpreview(dev,self.drawingarea,self.brightness,self.contrast,self.gamma)	
		#context Testccd.new }

	#context Testccd custom methods {
	#--- Write your own methods here ---#
	#context Testccd custom methods }

	def on_testccd_delete_event(self, widget, *args):
		#context Testccd.on_testccd_delete_event {
		global running
		running=False
		return True
		#context Testccd.on_testccd_delete_event }

def main():
	global indi
	global dev
	global running
	try:
		dev="Device with Data Transfer"
		indi=gtkindiclient("localhost",7624)
		indi.enable_blob()
		testccd = Testccd()
		running=True
		while running:
			indi.process_events()
			while gtk.events_pending():
				gtk.main_iteration_do(False)
			time.sleep(0.01)
		indi.quit()
	except:
		a,b,c =sys.exc_info()
		sys.excepthook(  a,b,c	)
		indi.quit()
		
if __name__ == "__main__":
	main()
