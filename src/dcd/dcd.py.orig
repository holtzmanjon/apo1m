#!/usr/bin/env python
# -*- coding: UTF8 -*-

# Python module dcd.py
# Autogenerated from dcd.glade
# Generated on Mon Aug 22 09:34:08 2005

# Warning: Do not delete or modify comments related to context
# They are required to keep user's code

import os
import gtk
from SimpleGladeApp import SimpleGladeApp

glade_dir = ""

# Put your modules and data here

# From here through main() codegen inserts/updates a class for
# every top-level widget in the .glade file.

class Connections(SimpleGladeApp):
	def __init__(self, path="dcd.glade", root="connections", domain=None, **kwargs):
		path = os.path.join(glade_dir, path)
		SimpleGladeApp.__init__(self, path, root, domain, **kwargs)

	def new(self):
		#context Connections.new {
		print "A new Connections has been created"
		#context Connections.new }

	#context Connections custom methods {
	#--- Write your own methods here ---#
	#context Connections custom methods }

	def on_connections_delete_event(self, widget, *args):
		#context Connections.on_connections_delete_event {
		print "on_connections_delete_event called with self.%s" % widget.get_name()
		#context Connections.on_connections_delete_event }

	def on_addbutton_clicked(self, widget, *args):
		#context Connections.on_addbutton_clicked {
		print "on_addbutton_clicked called with self.%s" % widget.get_name()
		#context Connections.on_addbutton_clicked }

	def on_deletebutton_clicked(self, widget, *args):
		#context Connections.on_deletebutton_clicked {
		print "on_deletebutton_clicked called with self.%s" % widget.get_name()
		#context Connections.on_deletebutton_clicked }

	def on_connectbutton_clicked(self, widget, *args):
		#context Connections.on_connectbutton_clicked {
		print "on_connectbutton_clicked called with self.%s" % widget.get_name()
		#context Connections.on_connectbutton_clicked }

class Connection(SimpleGladeApp):
	def __init__(self, path="dcd.glade", root="connection", domain=None, **kwargs):
		path = os.path.join(glade_dir, path)
		SimpleGladeApp.__init__(self, path, root, domain, **kwargs)

	def new(self):
		#context Connection.new {
		print "A new Connection has been created"
		#context Connection.new }

	#context Connection custom methods {
	#--- Write your own methods here ---#
	#context Connection custom methods }

	def on_connection_delete_event(self, widget, *args):
		#context Connection.on_connection_delete_event {
		print "on_connection_delete_event called with self.%s" % widget.get_name()
		#context Connection.on_connection_delete_event }

	def on_okbutton_clicked(self, widget, *args):
		#context Connection.on_okbutton_clicked {
		print "on_okbutton_clicked called with self.%s" % widget.get_name()
		#context Connection.on_okbutton_clicked }

	def on_cancelbutton_clicked(self, widget, *args):
		#context Connection.on_cancelbutton_clicked {
		print "on_cancelbutton_clicked called with self.%s" % widget.get_name()
		#context Connection.on_cancelbutton_clicked }

def main():
	connections = Connections()
	connection = Connection()

	connections.run()

if __name__ == "__main__":
	main()
