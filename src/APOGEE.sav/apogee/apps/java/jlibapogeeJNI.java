/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.apogee.driver;

public class jlibapogeeJNI {
  public final static native long new_Uint16Vector__SWIG_0();
  public final static native long new_Uint16Vector__SWIG_1(long jarg1);
  public final static native long Uint16Vector_size(long jarg1, Uint16Vector jarg1_);
  public final static native long Uint16Vector_capacity(long jarg1, Uint16Vector jarg1_);
  public final static native void Uint16Vector_reserve(long jarg1, Uint16Vector jarg1_, long jarg2);
  public final static native boolean Uint16Vector_isEmpty(long jarg1, Uint16Vector jarg1_);
  public final static native void Uint16Vector_clear(long jarg1, Uint16Vector jarg1_);
  public final static native void Uint16Vector_add(long jarg1, Uint16Vector jarg1_, int jarg2);
  public final static native int Uint16Vector_get(long jarg1, Uint16Vector jarg1_, int jarg2);
  public final static native void Uint16Vector_set(long jarg1, Uint16Vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_Uint16Vector(long jarg1);
  public final static native void delete_ApogeeCam(long jarg1);
  public final static native void ApogeeCam_Reset(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_ReadReg(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native void ApogeeCam_WriteReg(long jarg1, ApogeeCam jarg1_, int jarg2, int jarg3);
  public final static native void ApogeeCam_SetRoiNumRows(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native void ApogeeCam_SetRoiNumCols(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetRoiNumRows(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetRoiNumCols(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetRoiStartRow(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native void ApogeeCam_SetRoiStartCol(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetRoiStartRow(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetRoiStartCol(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetRoiBinRow(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetRoiBinRow(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetRoiBinCol(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetRoiBinCol(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetFirmwareRev(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetImageCount(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetImageCount(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetImgSequenceCount(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetSequenceDelay(long jarg1, ApogeeCam jarg1_, double jarg2);
  public final static native double ApogeeCam_GetSequenceDelay(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetVariableSequenceDelay(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native boolean ApogeeCam_GetVariableSequenceDelay(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetTdiRate(long jarg1, ApogeeCam jarg1_, double jarg2);
  public final static native double ApogeeCam_GetTdiRate(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetTdiRows(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetTdiRows(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetTdiCounter(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetTdiBinningRows(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetTdiBinningRows(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetKineticsSectionHeight(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetKineticsSectionHeight(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetKineticsSections(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetKineticsSections(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetKineticsShiftInterval(long jarg1, ApogeeCam jarg1_, double jarg2);
  public final static native double ApogeeCam_GetKineticsShiftInterval(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetShutterStrobePosition(long jarg1, ApogeeCam jarg1_, double jarg2);
  public final static native double ApogeeCam_GetShutterStrobePosition(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetShutterStrobePeriod(long jarg1, ApogeeCam jarg1_, double jarg2);
  public final static native double ApogeeCam_GetShutterStrobePeriod(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetShutterCloseDelay(long jarg1, ApogeeCam jarg1_, double jarg2);
  public final static native double ApogeeCam_GetShutterCloseDelay(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetCoolerBackoffPoint(long jarg1, ApogeeCam jarg1_, double jarg2);
  public final static native double ApogeeCam_GetCoolerBackoffPoint(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetCoolerSetPoint(long jarg1, ApogeeCam jarg1_, double jarg2);
  public final static native double ApogeeCam_GetCoolerSetPoint(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetCameraMode(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetCameraMode(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native void ApogeeCam_SetFastSequence(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native boolean ApogeeCam_IsFastSequenceOn(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetBulkDownload(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native boolean ApogeeCam_IsBulkDownloadOn(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetPipelineDownload(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native boolean ApogeeCam_IsPipelineDownloadOn(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetIoPortAssignment(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetIoPortAssignment(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetIoPortBlankingBits(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetIoPortBlankingBits(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetIoPortDirection(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetIoPortDirection(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetIoPortData(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetIoPortData(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetPreFlash(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native boolean ApogeeCam_GetPreFlash(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetExternalTrigger(long jarg1, ApogeeCam jarg1_, boolean jarg2, int jarg3, int jarg4);
  public final static native boolean ApogeeCam_IsTriggerNormEachOn(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsTriggerNormGroupOn(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsTriggerTdiKinEachOn(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsTriggerTdiKinGroupOn(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsTriggerExternalShutterOn(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsTriggerExternalReadoutOn(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetShutterState(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetShutterState(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsShutterForcedOpen(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsShutterForcedClosed(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsShutterOpen(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetShutterAmpCtrl(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native boolean ApogeeCam_IsShutterAmpCtrlOn(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetCooler(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native int ApogeeCam_GetCoolerStatus(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsCoolerOn(long jarg1, ApogeeCam jarg1_);
  public final static native double ApogeeCam_GetTempCcd(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetCcdAdcResolution(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetCcdAdcResolution(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetCcdAdcSpeed(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetCcdAdcSpeed(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetMaxBinCols(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetMaxBinRows(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetMaxImgCols(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetMaxImgRows(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetTotalRows(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetTotalCols(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetNumOverscanCols(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsInterline(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetPlatformType(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetLedAState(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetLedAState(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetLedBState(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetLedBState(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetLedMode(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetLedMode(long jarg1, ApogeeCam jarg1_);
  public final static native String ApogeeCam_GetInfo(long jarg1, ApogeeCam jarg1_);
  public final static native String ApogeeCam_GetModel(long jarg1, ApogeeCam jarg1_);
  public final static native String ApogeeCam_GetSensor(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetFlushCommands(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native boolean ApogeeCam_AreFlushCmdsDisabled(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetPostExposeFlushing(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native boolean ApogeeCam_IsPostExposeFlushingDisabled(long jarg1, ApogeeCam jarg1_);
  public final static native double ApogeeCam_GetPixelWidth(long jarg1, ApogeeCam jarg1_);
  public final static native double ApogeeCam_GetPixelHeight(long jarg1, ApogeeCam jarg1_);
  public final static native double ApogeeCam_GetMinExposureTime(long jarg1, ApogeeCam jarg1_);
  public final static native double ApogeeCam_GetMaxExposureTime(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsColor(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsCoolingSupported(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsCoolingRegulated(long jarg1, ApogeeCam jarg1_);
  public final static native double ApogeeCam_GetInputVoltage(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetInterfaceType(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_GetUsbVendorInfo(long jarg1, ApogeeCam jarg1_, int[] jarg2, int[] jarg3, int[] jarg4);
  public final static native boolean ApogeeCam_IsCCD(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_PauseTimer(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native boolean ApogeeCam_IsSerialASupported(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsSerialBSupported(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetFlushBinningRows(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetFlushBinningRows(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsOverscanDigitized(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetDigitizeOverscan(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native void ApogeeCam_SetAdcGain(long jarg1, ApogeeCam jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int ApogeeCam_GetAdcGain(long jarg1, ApogeeCam jarg1_, int jarg2, int jarg3);
  public final static native void ApogeeCam_SetAdcOffset(long jarg1, ApogeeCam jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int ApogeeCam_GetAdcOffset(long jarg1, ApogeeCam jarg1_, int jarg2, int jarg3);
  public final static native boolean ApogeeCam_IsInitialized(long jarg1, ApogeeCam jarg1_);
  public final static native boolean ApogeeCam_IsConnected(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetAdSimMode(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native boolean ApogeeCam_IsAdSimModeOn(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetLedBrightness(long jarg1, ApogeeCam jarg1_, double jarg2);
  public final static native double ApogeeCam_GetLedBrightness(long jarg1, ApogeeCam jarg1_);
  public final static native String ApogeeCam_GetDriverVersion(long jarg1, ApogeeCam jarg1_);
  public final static native String ApogeeCam_GetUsbFirmwareVersion(long jarg1, ApogeeCam jarg1_);
  public final static native String ApogeeCam_GetSerialNumber(long jarg1, ApogeeCam jarg1_);
  public final static native long ApogeeCam_ReadStrDatabase(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_WriteStrDatabase(long jarg1, ApogeeCam jarg1_, long jarg2, StrDb jarg2_);
  public final static native void ApogeeCam_OpenConnection(long jarg1, ApogeeCam jarg1_, String jarg2, String jarg3, int jarg4, int jarg5);
  public final static native void ApogeeCam_CloseConnection(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_Init(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_StartExposure(long jarg1, ApogeeCam jarg1_, double jarg2, boolean jarg3);
  public final static native long ApogeeCam_GetStatus(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetImagingStatus(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_GetImage(long jarg1, ApogeeCam jarg1_, long jarg2, Uint16Vector jarg2_);
  public final static native void ApogeeCam_StopExposure(long jarg1, ApogeeCam jarg1_, boolean jarg2);
  public final static native long ApogeeCam_GetAvailableMemory(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetNumAds(long jarg1, ApogeeCam jarg1_);
  public final static native int ApogeeCam_GetNumAdChannels(long jarg1, ApogeeCam jarg1_);
  public final static native double ApogeeCam_GetCoolerDrive(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_SetFanMode__SWIG_0(long jarg1, ApogeeCam jarg1_, int jarg2, boolean jarg3);
  public final static native void ApogeeCam_SetFanMode__SWIG_1(long jarg1, ApogeeCam jarg1_, int jarg2);
  public final static native int ApogeeCam_GetFanMode(long jarg1, ApogeeCam jarg1_);
  public final static native double ApogeeCam_GetTempHeatsink(long jarg1, ApogeeCam jarg1_);
  public final static native void ApogeeCam_UpdateAlta(long jarg1, ApogeeCam jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6, String jarg7);
  public final static native void ApogeeCam_UpdateAscentOrAltaF(long jarg1, ApogeeCam jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ApogeeCam_UpdateAspen(long jarg1, ApogeeCam jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6, String jarg7);
  public final static native void delete_CamGen2Base(long jarg1);
  public final static native long CamGen2Base_GetStatus(long jarg1, CamGen2Base jarg1_);
  public final static native int CamGen2Base_GetImagingStatus(long jarg1, CamGen2Base jarg1_);
  public final static native void CamGen2Base_GetImage(long jarg1, CamGen2Base jarg1_, long jarg2, Uint16Vector jarg2_);
  public final static native void CamGen2Base_StopExposure(long jarg1, CamGen2Base jarg1_, boolean jarg2);
  public final static native long CamGen2Base_GetAvailableMemory(long jarg1, CamGen2Base jarg1_);
  public final static native int CamGen2Base_GetNumAds(long jarg1, CamGen2Base jarg1_);
  public final static native double CamGen2Base_GetCoolerDrive(long jarg1, CamGen2Base jarg1_);
  public final static native double CamGen2Base_GetTempHeatsink(long jarg1, CamGen2Base jarg1_);
  public final static native long new_Alta();
  public final static native void delete_Alta(long jarg1);
  public final static native void Alta_OpenConnection(long jarg1, Alta jarg1_, String jarg2, String jarg3, int jarg4, int jarg5);
  public final static native void Alta_CloseConnection(long jarg1, Alta jarg1_);
  public final static native void Alta_Init(long jarg1, Alta jarg1_);
  public final static native void Alta_StartExposure(long jarg1, Alta jarg1_, double jarg2, boolean jarg3);
  public final static native long Alta_GetStatus(long jarg1, Alta jarg1_);
  public final static native int Alta_GetImagingStatus(long jarg1, Alta jarg1_);
  public final static native void Alta_GetImage(long jarg1, Alta jarg1_, long jarg2, Uint16Vector jarg2_);
  public final static native void Alta_StopExposure(long jarg1, Alta jarg1_, boolean jarg2);
  public final static native long Alta_GetAvailableMemory(long jarg1, Alta jarg1_);
  public final static native void Alta_SetCcdAdc12BitGain(long jarg1, Alta jarg1_, int jarg2);
  public final static native void Alta_SetCcdAdc12BitOffset(long jarg1, Alta jarg1_, int jarg2);
  public final static native int Alta_GetCcdAdc12BitGain(long jarg1, Alta jarg1_);
  public final static native int Alta_GetCcdAdc12BitOffset(long jarg1, Alta jarg1_);
  public final static native double Alta_GetCcdAdc16BitGain(long jarg1, Alta jarg1_);
  public final static native int Alta_GetNumAds(long jarg1, Alta jarg1_);
  public final static native int Alta_GetNumAdChannels(long jarg1, Alta jarg1_);
  public final static native double Alta_GetCoolerDrive(long jarg1, Alta jarg1_);
  public final static native void Alta_SetFanMode__SWIG_0(long jarg1, Alta jarg1_, int jarg2, boolean jarg3);
  public final static native void Alta_SetFanMode__SWIG_1(long jarg1, Alta jarg1_, int jarg2);
  public final static native int Alta_GetFanMode(long jarg1, Alta jarg1_);
  public final static native double Alta_GetTempHeatsink(long jarg1, Alta jarg1_);
  public final static native String Alta_GetMacAddress(long jarg1, Alta jarg1_);
  public final static native void Alta_OpenSerial(long jarg1, Alta jarg1_, int jarg2);
  public final static native void Alta_CloseSerial(long jarg1, Alta jarg1_, int jarg2);
  public final static native void Alta_SetSerialBaudRate(long jarg1, Alta jarg1_, int jarg2, long jarg3);
  public final static native long Alta_GetSerialBaudRate(long jarg1, Alta jarg1_, int jarg2);
  public final static native int Alta_GetSerialFlowControl(long jarg1, Alta jarg1_, int jarg2);
  public final static native void Alta_SetSerialFlowControl(long jarg1, Alta jarg1_, int jarg2, int jarg3);
  public final static native int Alta_GetSerialParity(long jarg1, Alta jarg1_, int jarg2);
  public final static native void Alta_SetSerialParity(long jarg1, Alta jarg1_, int jarg2, int jarg3);
  public final static native String Alta_ReadSerial(long jarg1, Alta jarg1_, int jarg2);
  public final static native void Alta_WriteSerial(long jarg1, Alta jarg1_, int jarg2, String jarg3);
  public final static native int ApogeeFilterWheel_UNKNOWN_TYPE_get();
  public final static native int ApogeeFilterWheel_FW50_9R_get();
  public final static native int ApogeeFilterWheel_FW50_7S_get();
  public final static native int ApogeeFilterWheel_AFW50_10S_get();
  public final static native int ApogeeFilterWheel_AFW31_17R_get();
  public final static native long new_ApogeeFilterWheel();
  public final static native void delete_ApogeeFilterWheel(long jarg1);
  public final static native void ApogeeFilterWheel_Init(long jarg1, ApogeeFilterWheel jarg1_, int jarg2, String jarg3);
  public final static native void ApogeeFilterWheel_Close(long jarg1, ApogeeFilterWheel jarg1_);
  public final static native int ApogeeFilterWheel_GetVendorId(long jarg1, ApogeeFilterWheel jarg1_);
  public final static native int ApogeeFilterWheel_GetProductId(long jarg1, ApogeeFilterWheel jarg1_);
  public final static native int ApogeeFilterWheel_GetDeviceId(long jarg1, ApogeeFilterWheel jarg1_);
  public final static native String ApogeeFilterWheel_GetUsbFirmwareRev(long jarg1, ApogeeFilterWheel jarg1_);
  public final static native int ApogeeFilterWheel_GetType(long jarg1, ApogeeFilterWheel jarg1_);
  public final static native String ApogeeFilterWheel_GetName(long jarg1, ApogeeFilterWheel jarg1_);
  public final static native int ApogeeFilterWheel_GetStatus(long jarg1, ApogeeFilterWheel jarg1_);
  public final static native int ApogeeFilterWheel_GetMaxPositions(long jarg1, ApogeeFilterWheel jarg1_);
  public final static native void ApogeeFilterWheel_SetPosition(long jarg1, ApogeeFilterWheel jarg1_, int jarg2);
  public final static native int ApogeeFilterWheel_GetPosition(long jarg1, ApogeeFilterWheel jarg1_);
  public final static native int Ascent_FW_UNKNOWN_TYPE_get();
  public final static native int Ascent_CFW25_6R_get();
  public final static native int Ascent_CFW31_8R_get();
  public final static native long new_Ascent();
  public final static native void Ascent_OpenConnection(long jarg1, Ascent jarg1_, String jarg2, String jarg3, int jarg4, int jarg5);
  public final static native void Ascent_CloseConnection(long jarg1, Ascent jarg1_);
  public final static native void delete_Ascent(long jarg1);
  public final static native void Ascent_FilterWheelOpen(long jarg1, Ascent jarg1_, int jarg2);
  public final static native void Ascent_FilterWheelClose(long jarg1, Ascent jarg1_);
  public final static native void Ascent_SetFilterWheelPos(long jarg1, Ascent jarg1_, int jarg2);
  public final static native int Ascent_GetFilterWheelPos(long jarg1, Ascent jarg1_);
  public final static native int Ascent_GetFilterWheelStatus(long jarg1, Ascent jarg1_);
  public final static native int Ascent_GetFilterWheelType(long jarg1, Ascent jarg1_);
  public final static native String Ascent_GetFilterWheelName(long jarg1, Ascent jarg1_);
  public final static native int Ascent_GetFilterWheelMaxPositions(long jarg1, Ascent jarg1_);
  public final static native void Ascent_StartExposure(long jarg1, Ascent jarg1_, double jarg2, boolean jarg3);
  public final static native int Ascent_GetNumAdChannels(long jarg1, Ascent jarg1_);
  public final static native void Ascent_Init(long jarg1, Ascent jarg1_);
  public final static native boolean Ascent_IsDualReadoutSupported(long jarg1, Ascent jarg1_);
  public final static native void Ascent_SetDualReadout(long jarg1, Ascent jarg1_, boolean jarg2);
  public final static native boolean Ascent_GetDualReadout(long jarg1, Ascent jarg1_);
  public final static native int Ascent_GetFanMode(long jarg1, Ascent jarg1_);
  public final static native void Ascent_SetFanMode__SWIG_0(long jarg1, Ascent jarg1_, int jarg2, boolean jarg3);
  public final static native void Ascent_SetFanMode__SWIG_1(long jarg1, Ascent jarg1_, int jarg2);
  public final static native long new_AltaF();
  public final static native void delete_AltaF(long jarg1);
  public final static native void AltaF_OpenConnection(long jarg1, AltaF jarg1_, String jarg2, String jarg3, int jarg4, int jarg5);
  public final static native void AltaF_CloseConnection(long jarg1, AltaF jarg1_);
  public final static native void AltaF_StartExposure(long jarg1, AltaF jarg1_, double jarg2, boolean jarg3);
  public final static native int AltaF_GetNumAdChannels(long jarg1, AltaF jarg1_);
  public final static native void AltaF_Init(long jarg1, AltaF jarg1_);
  public final static native int AltaF_GetFanMode(long jarg1, AltaF jarg1_);
  public final static native void AltaF_SetFanMode__SWIG_0(long jarg1, AltaF jarg1_, int jarg2, boolean jarg3);
  public final static native void AltaF_SetFanMode__SWIG_1(long jarg1, AltaF jarg1_, int jarg2);
  public final static native void StrDb_FactorySn_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_FactorySn_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_CustomerSn_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_CustomerSn_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Id_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Id_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Platform_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Platform_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_PartNum_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_PartNum_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Ccd_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Ccd_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_CcdSn_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_CcdSn_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_CcdGrade_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_CcdGrade_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_ProcBoardRev_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_ProcBoardRev_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_DriveBoardRev_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_DriveBoardRev_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Shutter_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Shutter_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_WindowType_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_WindowType_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_MechCfg_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_MechCfg_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_MechRev_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_MechRev_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_CoolingType_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_CoolingType_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_FinishFront_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_FinishFront_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_FinishBack_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_FinishBack_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_MpiRev_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_MpiRev_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_TestDate_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_TestDate_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_TestedBy_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_TestedBy_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_TestedDllRev_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_TestedDllRev_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_TestedFwRev_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_TestedFwRev_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Gain_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Gain_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Noise_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Noise_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Bias_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Bias_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_TestTemp_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_TestTemp_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_DarkCount_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_DarkCount_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_DarkDuration_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_DarkDuration_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_DarkTemp_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_DarkTemp_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_CoolingDelta_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_CoolingDelta_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Ad1Offset_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Ad1Offset_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Ad1Gain_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Ad1Gain_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Ad2Offset_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Ad2Offset_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Ad2Gain_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Ad2Gain_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Rma1_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Rma1_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Rma2_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Rma2_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Comment1_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Comment1_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Comment2_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Comment2_get(long jarg1, StrDb jarg1_);
  public final static native void StrDb_Comment3_set(long jarg1, StrDb jarg1_, String jarg2);
  public final static native String StrDb_Comment3_get(long jarg1, StrDb jarg1_);
  public final static native long new_StrDb();
  public final static native void delete_StrDb(long jarg1);
  public final static native long MkStrVectFromStrDb(long jarg1, StrDb jarg1_);
  public final static native long MkStrDbFromStrVect(long jarg1);
  public final static native long GetNoOpDb();
  public final static native long NET_MAGIC_VALID_get();
  public final static native void NetDb_Magic_set(long jarg1, NetDb jarg1_, long jarg2);
  public final static native long NetDb_Magic_get(long jarg1, NetDb jarg1_);
  public final static native void NetDb_IP_set(long jarg1, NetDb jarg1_, long jarg2);
  public final static native long NetDb_IP_get(long jarg1, NetDb jarg1_);
  public final static native void NetDb_Gateway_set(long jarg1, NetDb jarg1_, long jarg2);
  public final static native long NetDb_Gateway_get(long jarg1, NetDb jarg1_);
  public final static native void NetDb_Netmask_set(long jarg1, NetDb jarg1_, long jarg2);
  public final static native long NetDb_Netmask_get(long jarg1, NetDb jarg1_);
  public final static native void NetDb_Port_set(long jarg1, NetDb jarg1_, long jarg2);
  public final static native long NetDb_Port_get(long jarg1, NetDb jarg1_);
  public final static native void NetDb_Flags_set(long jarg1, NetDb jarg1_, long jarg2);
  public final static native long NetDb_Flags_get(long jarg1, NetDb jarg1_);
  public final static native void NetDb_MAC_set(long jarg1, NetDb jarg1_, long jarg2);
  public final static native long NetDb_MAC_get(long jarg1, NetDb jarg1_);
  public final static native void NetDb_Timeout_set(long jarg1, NetDb jarg1_, long jarg2);
  public final static native long NetDb_Timeout_get(long jarg1, NetDb jarg1_);
  public final static native long new_NetDb();
  public final static native void delete_NetDb(long jarg1);
  public final static native long MkU8VectFromNetDb(long jarg1, NetDb jarg1_);
  public final static native long MkNetDbFromU8Vect(long jarg1);
  public final static native boolean IsAlta(int jarg1);
  public final static native boolean IsGen2Platform(int jarg1);
  public final static native boolean IsFirmwareRevGood(int jarg1);
  public final static native int MaskRawId(int jarg1, int jarg2);
  public final static native int GetPlatformType__SWIG_0(int jarg1, boolean jarg2);
  public final static native int GetPlatformType__SWIG_1(int jarg1);
  public final static native int GetPlatformType__SWIG_2(String jarg1);
  public final static native String GetPlatformStr__SWIG_0(int jarg1, boolean jarg2);
  public final static native String GetPlatformStr__SWIG_1(int jarg1);
  public final static native String GetModelStr(int jarg1);
  public final static native String GetNoOpFirmwareRev();
  public final static native int FIRMWARE_PLATFORM_MASK_get();
  public final static native int MAX_ALTA_FIRMWARE_REV_get();
  public final static native int MIN_GEN2_FIRMWARE_get();
  public final static native int MAX_GEN2_FIRMWARE_get();
  public final static native int ALTA_CAMERA_ID_MASK_get();
  public final static native int GEN2_CAMERA_ID_MASK_get();
  public final static native int NO_OP_FRMWR_REV_get();
  public final static native int Status_ConnectionError_get();
  public final static native int Status_DataError_get();
  public final static native int Status_PatternError_get();
  public final static native int Status_Idle_get();
  public final static native int Status_Exposing_get();
  public final static native int Status_ImagingActive_get();
  public final static native int Status_ImageReady_get();
  public final static native int Status_Flushing_get();
  public final static native int Status_WaitingOnTrigger_get();
  public final static native int CameraMode_Normal_get();
  public final static native int CameraMode_TDI_get();
  public final static native int CameraMode_Test_get();
  public final static native int CameraMode_ExternalTrigger_get();
  public final static native int CameraMode_ExternalShutter_get();
  public final static native int CameraMode_Kinetics_get();
  public final static native int CameraMode_Unknown_get();
  public final static native int Resolution_SixteenBit_get();
  public final static native int Resolution_TwelveBit_get();
  public final static native int CoolerStatus_Off_get();
  public final static native int CoolerStatus_RampingToSetPoint_get();
  public final static native int CoolerStatus_AtSetPoint_get();
  public final static native int CoolerStatus_Revision_get();
  public final static native int CoolerStatus_Suspended_get();
  public final static native int FanMode_Off_get();
  public final static native int FanMode_Low_get();
  public final static native int FanMode_Medium_get();
  public final static native int FanMode_High_get();
  public final static native int FanMode_Unknown_get();
  public final static native int LedState_Expose_get();
  public final static native int LedState_ImageActive_get();
  public final static native int LedState_Flushing_get();
  public final static native int LedState_ExtTriggerWaiting_get();
  public final static native int LedState_ExtTriggerReceived_get();
  public final static native int LedState_ExtShutterInput_get();
  public final static native int LedState_ExtStartReadout_get();
  public final static native int LedState_AtTemp_get();
  public final static native int LedState_Unknown_get();
  public final static native int LedMode_DisableAll_get();
  public final static native int LedMode_DisableWhileExpose_get();
  public final static native int LedMode_EnableAll_get();
  public final static native int LedMode_Unknown_get();
  public final static native int ErrorType_Connection_get();
  public final static native int ErrorType_Critical_get();
  public final static native int ErrorType_Serious_get();
  public final static native int SerialParity_Unknown_get();
  public final static native int SerialParity_None_get();
  public final static native int SerialParity_Odd_get();
  public final static native int SerialParity_Even_get();
  public final static native int SerialFC_Unknown_get();
  public final static native int SerialFC_Off_get();
  public final static native int SerialFC_On_get();
  public final static native long new_CameraStatusRegs__SWIG_0();
  public final static native long new_CameraStatusRegs__SWIG_1(long jarg1);
  public final static native long new_CameraStatusRegs__SWIG_2(long jarg1);
  public final static native void delete_CameraStatusRegs(long jarg1);
  public final static native int CameraStatusRegs_GetTempHeatSink(long jarg1, CameraStatusRegs jarg1_);
  public final static native int CameraStatusRegs_GetTempCcd(long jarg1, CameraStatusRegs jarg1_);
  public final static native int CameraStatusRegs_GetCoolerDrive(long jarg1, CameraStatusRegs jarg1_);
  public final static native int CameraStatusRegs_GetInputVoltage(long jarg1, CameraStatusRegs jarg1_);
  public final static native int CameraStatusRegs_GetTdiCounter(long jarg1, CameraStatusRegs jarg1_);
  public final static native int CameraStatusRegs_GetSequenceCounter(long jarg1, CameraStatusRegs jarg1_);
  public final static native int CameraStatusRegs_GetStatus(long jarg1, CameraStatusRegs jarg1_);
  public final static native int CameraStatusRegs_GetuFrame(long jarg1, CameraStatusRegs jarg1_);
  public final static native int CameraStatusRegs_GetMostRecentFrame(long jarg1, CameraStatusRegs jarg1_);
  public final static native int CameraStatusRegs_GetReadyFrame(long jarg1, CameraStatusRegs jarg1_);
  public final static native int CameraStatusRegs_GetCurrentFrame(long jarg1, CameraStatusRegs jarg1_);
  public final static native long CameraStatusRegs_GetFetchCount(long jarg1, CameraStatusRegs jarg1_);
  public final static native boolean CameraStatusRegs_GetDataAvailFlag(long jarg1, CameraStatusRegs jarg1_);
  public final static native void CameraStatusRegs_QueryStatusRegs(long jarg1, CameraStatusRegs jarg1_, int[] jarg2, int[] jarg3, int[] jarg4, int[] jarg5, int[] jarg6, int[] jarg7, int[] jarg8, int[] jarg9, int[] jarg10, int[] jarg11);
  public final static native String CameraStatusRegs_GetStatusStr(long jarg1, CameraStatusRegs jarg1_);
  public final static native void CameraStatusRegs_Update__SWIG_0(long jarg1, CameraStatusRegs jarg1_, long jarg2);
  public final static native void CameraStatusRegs_Update__SWIG_1(long jarg1, CameraStatusRegs jarg1_, long jarg2);
  public final static native long new_FindDeviceEthernet();
  public final static native void delete_FindDeviceEthernet(long jarg1);
  public final static native String FindDeviceEthernet_Find(long jarg1, FindDeviceEthernet jarg1_, String jarg2);
  public final static native int FindDeviceEthernet_GetElapsedSecs(long jarg1, FindDeviceEthernet jarg1_);
  public final static native int FindDeviceEthernet_GetTimeout(long jarg1, FindDeviceEthernet jarg1_);
  public final static native void delete_FindDeviceUsb(long jarg1);
  public final static native String FindDeviceUsb_Find(long jarg1, FindDeviceUsb jarg1_);
  public final static native long new_FindDeviceUsb();
  public final static native long new_Aspen();
  public final static native void delete_Aspen(long jarg1);
  public final static native void Aspen_OpenConnection(long jarg1, Aspen jarg1_, String jarg2, String jarg3, int jarg4, int jarg5);
  public final static native void Aspen_CloseConnection(long jarg1, Aspen jarg1_);
  public final static native void Aspen_StartExposure(long jarg1, Aspen jarg1_, double jarg2, boolean jarg3);
  public final static native int Aspen_GetNumAdChannels(long jarg1, Aspen jarg1_);
  public final static native String Aspen_GetMacAddress(long jarg1, Aspen jarg1_);
  public final static native void Aspen_Init(long jarg1, Aspen jarg1_);
  public final static native int Aspen_GetFanMode(long jarg1, Aspen jarg1_);
  public final static native void Aspen_SetFanMode__SWIG_0(long jarg1, Aspen jarg1_, int jarg2, boolean jarg3);
  public final static native void Aspen_SetFanMode__SWIG_1(long jarg1, Aspen jarg1_, int jarg2);
  public final static native boolean Aspen_IsDualReadoutSupported(long jarg1, Aspen jarg1_);
  public final static native void Aspen_SetDualReadout(long jarg1, Aspen jarg1_, boolean jarg2);
  public final static native boolean Aspen_GetDualReadout(long jarg1, Aspen jarg1_);
  public final static native long new_Quad();
  public final static native void delete_Quad(long jarg1);
  public final static native void Quad_OpenConnection(long jarg1, Quad jarg1_, String jarg2, String jarg3, int jarg4, int jarg5);
  public final static native void Quad_CloseConnection(long jarg1, Quad jarg1_);
  public final static native void Quad_StartExposure(long jarg1, Quad jarg1_, double jarg2, boolean jarg3);
  public final static native boolean Quad_IsPixelReorderOn(long jarg1, Quad jarg1_);
  public final static native void Quad_SetPixelReorder(long jarg1, Quad jarg1_, boolean jarg2);
  public final static native int Quad_GetNumAdChannels(long jarg1, Quad jarg1_);
  public final static native void Quad_SetIsQuadBit(long jarg1, Quad jarg1_);
  public final static native void Quad_Init(long jarg1, Quad jarg1_);
  public final static native int Quad_GetFanMode(long jarg1, Quad jarg1_);
  public final static native void Quad_SetFanMode__SWIG_0(long jarg1, Quad jarg1_, int jarg2, boolean jarg3);
  public final static native void Quad_SetFanMode__SWIG_1(long jarg1, Quad jarg1_, int jarg2);
  public final static native long new_HiC();
  public final static native void delete_HiC(long jarg1);
  public final static native void HiC_SetSerialNumber(long jarg1, HiC jarg1_, String jarg2);
  public final static native long HiC_GetCamInfo(long jarg1, HiC jarg1_);
  public final static native void HiC_SetCamInfo(long jarg1, HiC jarg1_, long jarg2, StrDb jarg2_);
  public final static native void HiC_Get4kby4kImage(long jarg1, HiC jarg1_, long jarg2, Uint16Vector jarg2_);
  public final static native long CamGen2Base_SWIGUpcast(long jarg1);
  public final static native long Alta_SWIGUpcast(long jarg1);
  public final static native long Ascent_SWIGUpcast(long jarg1);
  public final static native long AltaF_SWIGUpcast(long jarg1);
  public final static native long Aspen_SWIGUpcast(long jarg1);
  public final static native long Quad_SWIGUpcast(long jarg1);
  public final static native long HiC_SWIGUpcast(long jarg1);
}
