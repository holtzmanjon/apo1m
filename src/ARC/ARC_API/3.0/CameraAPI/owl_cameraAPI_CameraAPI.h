/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class owl_cameraAPI_CameraAPI */

#ifndef _Included_owl_cameraAPI_CameraAPI
#define _Included_owl_cameraAPI_CameraAPI
#ifdef __cplusplus
extern "C" {
#endif
#undef owl_cameraAPI_CameraAPI_UNDEFINED_VALUE
#define owl_cameraAPI_CameraAPI_UNDEFINED_VALUE -1L
/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetAPIConstants
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_GetAPIConstants
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetDeviceList
 * Signature: ([Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_owl_cameraAPI_CameraAPI_GetDeviceList
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    IsDeviceOpen
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_owl_cameraAPI_CameraAPI_IsDeviceOpen
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    IsCCD
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_owl_cameraAPI_CameraAPI_IsCCD
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetDeviceId
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetDeviceId
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetDeviceString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_owl_cameraAPI_CameraAPI_GetDeviceString
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetImageBufferVA
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_owl_cameraAPI_CameraAPI_GetImageBufferVA
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetImageBufferPA
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_owl_cameraAPI_CameraAPI_GetImageBufferPA
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetImageBufferSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetImageBufferSize
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    FillImageBuffer
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_FillImageBuffer
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    LoadFitsToImageBuffer
 * Signature: (Ljava/lang/String;)[I
 */
JNIEXPORT jintArray JNICALL Java_owl_cameraAPI_CameraAPI_LoadFitsToImageBuffer
  (JNIEnv *, jclass, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    SetAbort
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_SetAbort
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    LoadTmpCtrlFile
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_LoadTmpCtrlFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    SaveTmpCtrlFile
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_SaveTmpCtrlFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    LogAPICmds
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_LogAPICmds
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetLoggedAPICmds
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_owl_cameraAPI_CameraAPI_GetLoggedAPICmds
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    OpenDeviceAPI
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_OpenDeviceAPI
  (JNIEnv *, jclass, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    CloseDeviceAPI
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_CloseDeviceAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    MapDeviceAPI
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_MapDeviceAPI
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    RemapDeviceAPI
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_RemapDeviceAPI
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    UnmapDeviceAPI
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_UnmapDeviceAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    ClearDeviceStatusAPI
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_ClearDeviceStatusAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetDeviceStatusAPI
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetDeviceStatusAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetPixelCountAPI
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetPixelCountAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetCRPixelCountAPI
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetCRPixelCountAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetFrameCountAPI
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetFrameCountAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    IsReadoutAPI
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_owl_cameraAPI_CameraAPI_IsReadoutAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    CommandAPI
 * Signature: (IIIIII)I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_CommandAPI
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    LoadDeviceFileAPI
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_LoadDeviceFileAPI
  (JNIEnv *, jclass, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    LoadControllerFileAPI
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_LoadControllerFileAPI
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    SetImageSizeAPI
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_SetImageSizeAPI
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetImageRowsAPI
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetImageRowsAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetImageColsAPI
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetImageColsAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetCCParamsAPI
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetCCParamsAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    IsCCParamSupportedAPI
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_owl_cameraAPI_CameraAPI_IsCCParamSupportedAPI
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    IsControllerConnectedAPI
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_owl_cameraAPI_CameraAPI_IsControllerConnectedAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetArrayTemperatureAPI
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_owl_cameraAPI_CameraAPI_GetArrayTemperatureAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetArrayTemperatureDNAPI
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_owl_cameraAPI_CameraAPI_GetArrayTemperatureDNAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    SetArrayTemperatureAPI
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_SetArrayTemperatureAPI
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    SetBinningAPI
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_SetBinningAPI
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    UnsetBinningAPI
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_UnsetBinningAPI
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    SetOpenShutterAPI
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_SetOpenShutterAPI
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    SetSyntheticImageModeAPI
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_SetSyntheticImageModeAPI
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    IsSyntheticImageModeAPI
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_owl_cameraAPI_CameraAPI_IsSyntheticImageModeAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    ResetDeviceAPI
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_ResetDeviceAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    ResetControllerAPI
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_ResetControllerAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    StopExposureAPI
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_StopExposureAPI
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    Set2xFOTransmitterAPI
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_Set2xFOTransmitterAPI
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetCfgByteAPI
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetCfgByteAPI
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetCfgWordAPI
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetCfgWordAPI
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetCfgDWordAPI
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetCfgDWordAPI
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    SetCfgByteAPI
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_SetCfgByteAPI
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    SetCfgWordAPI
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_SetCfgWordAPI
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    SetCfgDWordAPI
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_SetCfgDWordAPI
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetProperties
 * Signature: ()[[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_owl_cameraAPI_CameraAPI_GetProperties
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    DeinterlaceImage
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_DeinterlaceImage__III
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    DeinterlaceImage
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_DeinterlaceImage__IIII
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    DeinterlaceImage
 * Signature: (IIIII)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_DeinterlaceImage__IIIII
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetCustomDeinterlaceAlgorithms
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_owl_cameraAPI_CameraAPI_GetCustomDeinterlaceAlgorithms
  (JNIEnv *, jclass, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    SubtractImageHalves
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_SubtractImageHalves
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    VerifySyntheticImage
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_VerifySyntheticImage
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    LaunchDisplay
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_LaunchDisplay
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    TerminateDisplay
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_TerminateDisplay
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    DisplayImage
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_DisplayImage
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    WriteBufferTextFile
 * Signature: (Ljava/lang/String;II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_WriteBufferTextFile
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    LoadBufferTextFile
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_LoadBufferTextFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    ImageHistogram
 * Signature: (IIIIII)[Ljava/awt/geom/Point2D/Float;
 */
JNIEXPORT jobjectArray JNICALL Java_owl_cameraAPI_CameraAPI_ImageHistogram
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetImageRow
 * Signature: (IIIII)[Ljava/awt/geom/Point2D/Float;
 */
JNIEXPORT jobjectArray JNICALL Java_owl_cameraAPI_CameraAPI_GetImageRow
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetImageCol
 * Signature: (IIIII)[Ljava/awt/geom/Point2D/Float;
 */
JNIEXPORT jobjectArray JNICALL Java_owl_cameraAPI_CameraAPI_GetImageCol
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetImageRowArea
 * Signature: (IIIIII)[Ljava/awt/geom/Point2D/Float;
 */
JNIEXPORT jobjectArray JNICALL Java_owl_cameraAPI_CameraAPI_GetImageRowArea
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetImageColArea
 * Signature: (IIIIII)[Ljava/awt/geom/Point2D/Float;
 */
JNIEXPORT jobjectArray JNICALL Java_owl_cameraAPI_CameraAPI_GetImageColArea
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetImageStats
 * Signature: (IIIIII)Lowl/img/analysis/ImageStats;
 */
JNIEXPORT jobject JNICALL Java_owl_cameraAPI_CameraAPI_GetImageStats__IIIIII
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    PixelSearch
 * Signature: (I)[Ljava/awt/Point;
 */
JNIEXPORT jobjectArray JNICALL Java_owl_cameraAPI_CameraAPI_PixelSearch
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    DeinterlaceFitsFile
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_DeinterlaceFitsFile__Ljava_lang_String_2I
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    DeinterlaceFitsFile
 * Signature: (Ljava/lang/String;II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_DeinterlaceFitsFile__Ljava_lang_String_2II
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    Deinterlace3DFitsFile
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_Deinterlace3DFitsFile__Ljava_lang_String_2I
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    Deinterlace3DFitsFile
 * Signature: (Ljava/lang/String;II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_Deinterlace3DFitsFile__Ljava_lang_String_2II
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    WriteTiffFile
 * Signature: (Ljava/lang/String;II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_WriteTiffFile
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    WriteFitsFile
 * Signature: (Ljava/lang/String;II)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_WriteFitsFile
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    WriteFitsKeyword
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_WriteFitsKeyword
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    WriteFitsComment
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_WriteFitsComment
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    WriteFitsHistory
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_WriteFitsHistory
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    WriteFitsDate
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_WriteFitsDate
  (JNIEnv *, jclass, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    CreateFitsFile
 * Signature: (Ljava/lang/String;III)J
 */
JNIEXPORT jlong JNICALL Java_owl_cameraAPI_CameraAPI_CreateFitsFile
  (JNIEnv *, jclass, jstring, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    WriteToFitsFile
 * Signature: (JIII)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_WriteToFitsFile
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    Create3DFitsFile
 * Signature: (Ljava/lang/String;III)J
 */
JNIEXPORT jlong JNICALL Java_owl_cameraAPI_CameraAPI_Create3DFitsFile
  (JNIEnv *, jclass, jstring, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    WriteTo3DFitsFile
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_WriteTo3DFitsFile
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    CloseFitsFile
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_CloseFitsFile
  (JNIEnv *, jclass, jlong);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetImageStats
 * Signature: (Ljava/lang/String;IIII)Lowl/img/analysis/ImageStats;
 */
JNIEXPORT jobject JNICALL Java_owl_cameraAPI_CameraAPI_GetImageStats__Ljava_lang_String_2IIII
  (JNIEnv *, jclass, jstring, jint, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetImageDifStats
 * Signature: (Ljava/lang/String;Ljava/lang/String;IIII)Lowl/img/analysis/ImageDifStats;
 */
JNIEXPORT jobject JNICALL Java_owl_cameraAPI_CameraAPI_GetImageDifStats
  (JNIEnv *, jclass, jstring, jstring, jint, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    SetupController
 * Signature: (ZZZIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_SetupController
  (JNIEnv *, jclass, jboolean, jboolean, jboolean, jint, jint, jstring, jstring, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetTempCtrlAduOffset
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_owl_cameraAPI_CameraAPI_GetTempCtrlAduOffset
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetTempCtrlAduPerVolt
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_owl_cameraAPI_CameraAPI_GetTempCtrlAduPerVolt
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetTempCtrlAduCoeff
 * Signature: (I)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_owl_cameraAPI_CameraAPI_GetTempCtrlAduCoeff
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    UseRemoteAPI
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_UseRemoteAPI
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    ConnectToServer
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_ConnectToServer
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    DisconnectServer
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_DisconnectServer
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    EnableServerLog
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_EnableServerLog
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    IsServerLogging
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_owl_cameraAPI_CameraAPI_IsServerLogging
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetDirList
 * Signature: (Ljava/lang/String;)[Ljava/io/File;
 */
JNIEXPORT jobjectArray JNICALL Java_owl_cameraAPI_CameraAPI_GetDirList
  (JNIEnv *, jclass, jstring);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetCfgSpCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetCfgSpCount
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetCfgSpAddr
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetCfgSpAddr
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetCfgSpValue
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetCfgSpValue
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetCfgSpBitList
 * Signature: (I)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_owl_cameraAPI_CameraAPI_GetCfgSpBitList
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetCfgSpName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_owl_cameraAPI_CameraAPI_GetCfgSpName
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetBarCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetBarCount
  (JNIEnv *, jclass);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetBarName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_owl_cameraAPI_CameraAPI_GetBarName
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetBarRegCount
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetBarRegCount
  (JNIEnv *, jclass, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetBarRegAddr
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetBarRegAddr
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetBarRegValue
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetBarRegValue
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetBarRegName
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_owl_cameraAPI_CameraAPI_GetBarRegName
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetBarRegBitListCount
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_GetBarRegBitListCount
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    GetBarRegBitListDef
 * Signature: (III)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_owl_cameraAPI_CameraAPI_GetBarRegBitListDef
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    WriteBar
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_owl_cameraAPI_CameraAPI_WriteBar
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     owl_cameraAPI_CameraAPI
 * Method:    ReadBar
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_owl_cameraAPI_CameraAPI_ReadBar
  (JNIEnv *, jclass, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
