/* DO NOT EDIT THIS FILE - it is machine generated */
#ifdef __APPLE__
	#include <JavaVM/jni.h>
#else
	#include <jni.h>
#endif

/* Header for class arc_api_device_ArcDeviceJAPI */

#ifndef _Included_arc_api_device_ArcDeviceJAPI
#define _Included_arc_api_device_ArcDeviceJAPI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetAPIConstants
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_GetAPIConstants
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetDeviceList
 * Signature: ([Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_arc_api_device_ArcDeviceJAPI_GetDeviceList
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    ToString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_arc_api_device_ArcDeviceJAPI_ToString
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    IsOpen
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_arc_api_device_ArcDeviceJAPI_IsOpen
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    OpenNative
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_OpenNative__Ljava_lang_String_2
  (JNIEnv *, jclass, jstring);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    OpenNative
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_OpenNative__Ljava_lang_String_2I
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    OpenNative
 * Signature: (Ljava/lang/String;II)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_OpenNative__Ljava_lang_String_2II
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    CloseNative
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_CloseNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    ResetNative
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_ResetNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    MapCommonBufferNative
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_MapCommonBufferNative
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    ReMapCommonBufferNative
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_ReMapCommonBufferNative
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    UnMapCommonBufferNative
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_UnMapCommonBufferNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCommonBufferVA
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCommonBufferVA
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCommonBufferPA
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCommonBufferPA
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCommonBufferSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCommonBufferSize
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    FillCommonBuffer
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_FillCommonBuffer
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetId
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetId
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetStatusNative
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetStatusNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    ClearStatusNative
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_ClearStatusNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    Set2xFOTransmitterNative
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_Set2xFOTransmitterNative
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    LoadDeviceFileNative
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_LoadDeviceFileNative
  (JNIEnv *, jclass, jstring);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    CommandNative
 * Signature: (IIIIII)I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_CommandNative
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    ResetControllerNative
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_ResetControllerNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    IsControllerConnectedNative
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_arc_api_device_ArcDeviceJAPI_IsControllerConnectedNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    SetupControllerNative
 * Signature: (ZZZIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_SetupControllerNative
  (JNIEnv *, jclass, jboolean, jboolean, jboolean, jint, jint, jstring, jstring, jstring);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    LoadControllerFileNative
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_LoadControllerFileNative
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    SetImageSizeNative
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_SetImageSizeNative
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetImageRowsNative
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetImageRowsNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetImageColsNative
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetImageColsNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCCParamsNative
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCCParamsNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    IsCCParamSupportedNative
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_arc_api_device_ArcDeviceJAPI_IsCCParamSupportedNative
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    IsCCD
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_arc_api_device_ArcDeviceJAPI_IsCCD
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    SetBinningNative
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_SetBinningNative
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    UnSetBinningNative
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_UnSetBinningNative
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    IsSyntheticImageModeNative
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_arc_api_device_ArcDeviceJAPI_IsSyntheticImageModeNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    SetSyntheticImageModeNative
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_SetSyntheticImageModeNative
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    SetOpenShutterNative
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_SetOpenShutterNative
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    StopExposureNative
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_StopExposureNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    IsReadoutNative
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_arc_api_device_ArcDeviceJAPI_IsReadoutNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetPixelCountNative
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetPixelCountNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCRPixelCountNative
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCRPixelCountNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetFrameCountNative
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetFrameCountNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    SetAbort
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_SetAbort
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    LogAPICmdsAPI
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_LogAPICmdsAPI
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetLoggedAPICmds
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_arc_api_device_ArcDeviceJAPI_GetLoggedAPICmds
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetArrayTemperatureNative
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_arc_api_device_ArcDeviceJAPI_GetArrayTemperatureNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetArrayTemperatureDNNative
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_arc_api_device_ArcDeviceJAPI_GetArrayTemperatureDNNative
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    SetArrayTemperatureNative
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_SetArrayTemperatureNative
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    LoadTmpCtrlFile
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_LoadTmpCtrlFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    SaveTmpCtrlFile
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_SaveTmpCtrlFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCfgByteNative
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCfgByteNative
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCfgWordNative
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCfgWordNative
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCfgDWordNative
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCfgDWordNative
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    SetCfgByteNative
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_SetCfgByteNative
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    SetCfgWordNative
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_SetCfgWordNative
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    SetCfgDWordNative
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_SetCfgDWordNative
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCfgSpCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCfgSpCount
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCfgSpAddr
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCfgSpAddr
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCfgSpValue
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCfgSpValue
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCfgSpBitList
 * Signature: (I)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCfgSpBitList
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetCfgSpName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_arc_api_device_ArcDeviceJAPI_GetCfgSpName
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetBarCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetBarCount
  (JNIEnv *, jclass);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetBarName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_arc_api_device_ArcDeviceJAPI_GetBarName
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetBarRegCount
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetBarRegCount
  (JNIEnv *, jclass, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetBarRegAddr
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetBarRegAddr
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetBarRegValue
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetBarRegValue
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetBarRegName
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_arc_api_device_ArcDeviceJAPI_GetBarRegName
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetBarRegBitListCount
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_GetBarRegBitListCount
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    GetBarRegBitListDef
 * Signature: (III)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_arc_api_device_ArcDeviceJAPI_GetBarRegBitListDef
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    WriteBar
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_arc_api_device_ArcDeviceJAPI_WriteBar
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     arc_api_device_ArcDeviceJAPI
 * Method:    ReadBar
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_arc_api_device_ArcDeviceJAPI_ReadBar
  (JNIEnv *, jclass, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
