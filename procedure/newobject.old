parameter string=catalog guide acquire guidemon

jd=-1
gpa=-1
guide0=0

error goto objerr
call check
if domeopen==0&daytest==0
  goto objerr
end_if

nexpcode=nexp
if nexpcode==0
  nexpcode=1
end_if

if acquire==0
  goto expos
end_if

! Check to see if specified user catalogs exists, and if so, open in in tcomm
err goto nocat
open cat ./{catalog}.usno
close cat
goto move

nocat:
printf 'ERROR: catalog not found: /loki/tcomm/scripts/{catalog}'
goto ending

error goto objerr

! Move to desired star
move:
send 'inst 1'

! File is a USNO output file
call readusno ./{catalog}.usno guide0
string command 'NE %f8.1' epoch
send '{command}'

! Set desired PA (note gpa is set in readusno)
if guide==0
  gpa=0
end_if
!string command 'pa %f8.2' gpa
!send '{command}'

string command 'CO %2f12.6 %f10.2' rah decd gpa
printf 'echo {command} >>master2com' >./obj.inp
printf 'echo "\r" >>master2com ' >>./obj.inp
printf 'echo {command} >>master2com' 
printf 'echo "\r" >>master2com ' 
$csh obj.inp
string return '{com2master}'
printf '{return}'
gtime=1
if gmag<11
    gtime=3
    gupdate=guide
else_if gmag<=12
    gtime=3
    gupdate=guide
else_if gmag<13
    gtime=5
    gupdate=guide
else
    gtime=10
    gupdate=guide
end_if

! Update coordinates on bright star near the target
call coord 1
! Use guider to update rotator position
call coord -1 1

! Move back to target
$csh obj.inp
read com2master

! Start guiding
if guide==0
  goto expos
end_if
acktime=gtime*3
gsize=21

$date >./date.txt
open dd ./date.txt
string date '{dd}'
close dd

! take one guider image to flush chip in case shutter has been open
send g-disk
send 'gexp 0'
! now take acquisition guider image and see if we can see a star
send g+disk
call readgccd
string command 'gexp %f8.1' acktime
send '{command}'
string log 'Initial guide star acquisition: {catalog} %3f6.1' gx gy gmag
call writelog 0 gincval '{log}'
call readg gincval
zap $ireadbuf sig=0 size=3
if jd>0
  box 10 n=500 cr=256 cc=256
else_if gmag<90
  xs=max[5,gx-125]
  xe=min[ncol-5,gx+125]
  ys=max[5,gy-125]
  ye=min[nrow-5,gy+125]
  box 10 nr=ye-ys nc=xe-xs sr=ys sc=xs
else
  printf 'No guide star found. Not guiding'
  if guide0==0
    guide0=750
    goto move
  end_if
  goto expos
  printf ' {date} %3f6.1 : No guide star identified' gx gy gmag >>../guider.sum
end_if
abx $ireadbuf 10 high_row=hr high_col=hc high=high

! Just use full image!
nsearch=250
xs=max[5,gx-nsearch]
xe=min[ncol-5,gx+nsearch]
ys=max[5,gy-nsearch]
ye=min[nrow-5,gy+nsearch]
box 10 nr=ye-ys nc=xe-xs sr=ys sc=xs
abx $ireadbuf 10 high_row=hr high_col=hc high=high

if high<50&daytest==0
  printf 'No guide star found. Not guiding'
  call writesum 1 '{catalog}: No guide star found!'
  printf ' {date} %3f6.1 %f7.2: No guide star found'  gx gy gmag high >>../guider.sum
  if guide0==0
    guide0=750
    goto move
  end_if
  goto expos
end_if
!if jd>0
  gx=max[40,hc]
  gx=min[ncol-50,gx]
  gy=max[40,hr]
  gy=min[ncol-50,gy]
!end_if
string com 'goffset %2f8.1' hc-gx hr-gy
send '{com}'

guidex=gx guidey=gy

call readgccd
$sleep 5
string command 'gexp %f8.1' gtime
send '{command}'
call writelog 0 gincval 'Final guide acquisition: {catalog}'
call writesum 0 '{catalog}: Guide star acquired'
call readg gincval
zap $ireadbuf sig=0 size=3
type guidey guidex
xs=max[gsize/2+7,guidex-35]
xe=min[ncol-gsize/2-7,guidex+35]
ys=max[gsize/2+7,guidey-35]
ye=min[nrow-gsize/2-7,guidey+35]
box 10 nr=ye-ys nc=xe-xs sr=ys sc=xs
abx $ireadbuf 10 high_row=hr high_col=hc high=high

printf ' {date} %3f6.1 %f7.2 %2f6.1 : guiding'  guidex guidey gmag high hc hr >>../guider.sum

string com 'newguide %2f8.1 %i4 %i8 %i4' hc-1 hr-1 gsize gtime*1000 gupdate
send '{com}'
$sleep 30

call readgccd
string command 'gexp %f8.1' gtime
send '{command}'
string comment 'Guide star before sequence: {catalog}, %2f8.2' hc hr
call writelog 0 gincval 'Guide star before sequence: {catalog}'

if guidemon>0
  string com 'gwrite %i8' guidemon
  send '{com}'
else
  send 'gnowrite'
end_if

expos:
nexp=mod[nexpcode,100]
nset=int[(nexpcode-nexp)/100]
if nset==0
  nset=1
end_if
if jd<0
  send 'OBJECT {catalog}'
end_if
call readccd
printf '%i4 %i4 {root}' incval incval+nexp-1 >>../images/{root}/{catalog}.dat

open infilt ../filters.dat
stat nnn=count[infilt]
do i=1,nnn
  read infilt
  string var 'ofilt%i2.2' @infilt.1
  string {var} {infilt.-2}
  printf '{{var}}' >./tmp.tmp
  $awk '\{print tolower($1)\}' tmp.tmp >./tmp.out
  open tmpfilt ./tmp.out
  string {var} {tmpfilt}
  close tmpfilt
end_do
close infilt

! Take specified exposures
string filtobs ' '
do iset=1,nset

 do i=1,nfilt
   string var 'filt%i2.2' i
   string filt {{var}}
   string var 'exp%i2.2' i
   texp={var}
   if texp>0
     send 'setfilt {filt}'
     if texp<0.03
       texp=0.03
     end_if
     call readccd
!     printf '%i4 %i4 {root}' incval incval+nexp-1 |
!        >>../images/{root}/{catalog}.{filt}
     string filtobs '{filtobs} {filt}:%i1*%f5.1' nexp texp
     string command 'mexp %f8.2 %i2' texp nexp
     send '{command}' guidemon
     string head '{root}.%i3.3' incval
     error goto nextfilt
     rd 99 ../images/{root}/{head}.fits headonly maxtry=0
     filtnum={99:filter} 
     string var 'ofilt%i2.2' filtnum
     string f '{{var}}'
     printf '%i4 %i4 {root}' incval incval+nexp-1 |
        >>../images/{root}/{catalog}.{f}
     nextfilt:
   end_if
 end_do
end_do

call writesum 0 '{catalog} observed {filtobs}'

!send 'guideoff'
if guide>0
  call readgccd
  $sleep 5
  string command 'gexp %f8.1' gtime
  send '{command}'
  call writelog 0 gincval 'Guide star after complete sequence: {catalog}'
end_if
goto ending

objerr:
printf 'Error in object script'

ending:
end
